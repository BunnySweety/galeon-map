"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@lingui";
exports.ids = ["vendor-chunks/@lingui"];
exports.modules = {

/***/ "(ssr)/./node_modules/@lingui/core/dist/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@lingui/core/dist/index.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   I18n: () => (/* binding */ I18n),\n/* harmony export */   formats: () => (/* binding */ formats),\n/* harmony export */   i18n: () => (/* binding */ i18n),\n/* harmony export */   setupI18n: () => (/* binding */ setupI18n)\n/* harmony export */ });\n/* harmony import */ var unraw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! unraw */ \"(ssr)/./node_modules/unraw/dist/index.js\");\n/* harmony import */ var _lingui_message_utils_compileMessage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lingui/message-utils/compileMessage */ \"(ssr)/./node_modules/@lingui/message-utils/dist/compileMessage.mjs\");\n\n\n\nconst isString = (s) => typeof s === \"string\";\nconst isFunction = (f) => typeof f === \"function\";\n\nconst cache = /* @__PURE__ */ new Map();\nconst defaultLocale = \"en\";\nfunction normalizeLocales(locales) {\n  const out = Array.isArray(locales) ? locales : [locales];\n  return [...out, defaultLocale];\n}\nfunction date(locales, value, format) {\n  const _locales = normalizeLocales(locales);\n  if (!format) {\n    format = \"default\";\n  }\n  let o;\n  if (typeof format === \"string\") {\n    o = {\n      day: \"numeric\",\n      month: \"short\",\n      year: \"numeric\"\n    };\n    switch (format) {\n      case \"full\":\n        o.weekday = \"long\";\n      case \"long\":\n        o.month = \"long\";\n        break;\n      case \"short\":\n        o.month = \"numeric\";\n        break;\n    }\n  } else {\n    o = format;\n  }\n  const formatter = getMemoized(\n    () => cacheKey(\"date\", _locales, format),\n    () => new Intl.DateTimeFormat(_locales, o)\n  );\n  return formatter.format(isString(value) ? new Date(value) : value);\n}\nfunction time(locales, value, format) {\n  let o;\n  if (!format) {\n    format = \"default\";\n  }\n  if (typeof format === \"string\") {\n    o = {\n      second: \"numeric\",\n      minute: \"numeric\",\n      hour: \"numeric\"\n    };\n    switch (format) {\n      case \"full\":\n      case \"long\":\n        o.timeZoneName = \"short\";\n        break;\n      case \"short\":\n        delete o.second;\n    }\n  } else {\n    o = format;\n  }\n  return date(locales, value, o);\n}\nfunction number(locales, value, format) {\n  const _locales = normalizeLocales(locales);\n  const formatter = getMemoized(\n    () => cacheKey(\"number\", _locales, format),\n    () => new Intl.NumberFormat(_locales, format)\n  );\n  return formatter.format(value);\n}\nfunction plural(locales, ordinal, value, { offset = 0, ...rules }) {\n  const _locales = normalizeLocales(locales);\n  const plurals = ordinal ? getMemoized(\n    () => cacheKey(\"plural-ordinal\", _locales),\n    () => new Intl.PluralRules(_locales, { type: \"ordinal\" })\n  ) : getMemoized(\n    () => cacheKey(\"plural-cardinal\", _locales),\n    () => new Intl.PluralRules(_locales, { type: \"cardinal\" })\n  );\n  return rules[value] ?? rules[plurals.select(value - offset)] ?? rules.other;\n}\nfunction getMemoized(getKey, construct) {\n  const key = getKey();\n  let formatter = cache.get(key);\n  if (!formatter) {\n    formatter = construct();\n    cache.set(key, formatter);\n  }\n  return formatter;\n}\nfunction cacheKey(type, locales, options) {\n  const localeKey = locales.join(\"-\");\n  return `${type}-${localeKey}-${JSON.stringify(options)}`;\n}\n\nconst formats = {\n  __proto__: null,\n  date: date,\n  defaultLocale: defaultLocale,\n  number: number,\n  plural: plural,\n  time: time\n};\n\nconst UNICODE_REGEX = /\\\\u[a-fA-F0-9]{4}|\\\\x[a-fA-F0-9]{2}/;\nconst OCTOTHORPE_PH = \"%__lingui_octothorpe__%\";\nconst getDefaultFormats = (locale, passedLocales, formats = {}) => {\n  const locales = passedLocales || locale;\n  const style = (format) => {\n    if (typeof format === \"object\")\n      return format;\n    return formats[format];\n  };\n  const replaceOctothorpe = (value, message) => {\n    const numberFormat = Object.keys(formats).length ? style(\"number\") : void 0;\n    const valueStr = number(locales, value, numberFormat);\n    return message.replace(new RegExp(OCTOTHORPE_PH, \"g\"), valueStr);\n  };\n  return {\n    plural: (value, cases) => {\n      const { offset = 0 } = cases;\n      const message = plural(locales, false, value, cases);\n      return replaceOctothorpe(value - offset, message);\n    },\n    selectordinal: (value, cases) => {\n      const { offset = 0 } = cases;\n      const message = plural(locales, true, value, cases);\n      return replaceOctothorpe(value - offset, message);\n    },\n    select: selectFormatter,\n    number: (value, format) => number(\n      locales,\n      value,\n      style(format) || { style: format }\n    ),\n    date: (value, format) => date(locales, value, style(format) || format),\n    time: (value, format) => time(locales, value, style(format) || format)\n  };\n};\nconst selectFormatter = (value, rules) => rules[value] ?? rules.other;\nfunction interpolate(translation, locale, locales) {\n  return (values = {}, formats) => {\n    const formatters = getDefaultFormats(locale, locales, formats);\n    const formatMessage = (tokens, replaceOctothorpe = false) => {\n      if (!Array.isArray(tokens))\n        return tokens;\n      return tokens.reduce((message, token) => {\n        if (token === \"#\" && replaceOctothorpe) {\n          return message + OCTOTHORPE_PH;\n        }\n        if (isString(token)) {\n          return message + token;\n        }\n        const [name, type, format] = token;\n        let interpolatedFormat = {};\n        if (type === \"plural\" || type === \"selectordinal\" || type === \"select\") {\n          Object.entries(format).forEach(\n            ([key, value2]) => {\n              interpolatedFormat[key] = formatMessage(\n                value2,\n                type === \"plural\" || type === \"selectordinal\"\n              );\n            }\n          );\n        } else {\n          interpolatedFormat = format;\n        }\n        let value;\n        if (type) {\n          const formatter = formatters[type];\n          value = formatter(values[name], interpolatedFormat);\n        } else {\n          value = values[name];\n        }\n        if (value == null) {\n          return message;\n        }\n        return message + value;\n      }, \"\");\n    };\n    const result = formatMessage(translation);\n    if (isString(result) && UNICODE_REGEX.test(result)) {\n      return (0,unraw__WEBPACK_IMPORTED_MODULE_0__.unraw)(result);\n    }\n    if (isString(result))\n      return result;\n    return result ? String(result) : \"\";\n  };\n}\n\nvar __defProp$1 = Object.defineProperty;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField$1 = (obj, key, value) => {\n  __defNormalProp$1(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass EventEmitter {\n  constructor() {\n    __publicField$1(this, \"_events\", {});\n  }\n  on(event, listener) {\n    var _a;\n    (_a = this._events)[event] ?? (_a[event] = []);\n    this._events[event].push(listener);\n    return () => this.removeListener(event, listener);\n  }\n  removeListener(event, listener) {\n    const maybeListeners = this._getListeners(event);\n    if (!maybeListeners)\n      return;\n    const index = maybeListeners.indexOf(listener);\n    if (~index)\n      maybeListeners.splice(index, 1);\n  }\n  emit(event, ...args) {\n    const maybeListeners = this._getListeners(event);\n    if (!maybeListeners)\n      return;\n    maybeListeners.map((listener) => listener.apply(this, args));\n  }\n  _getListeners(event) {\n    const maybeListeners = this._events[event];\n    return Array.isArray(maybeListeners) ? maybeListeners : false;\n  }\n}\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass I18n extends EventEmitter {\n  constructor(params) {\n    super();\n    __publicField(this, \"_locale\", \"\");\n    __publicField(this, \"_locales\");\n    __publicField(this, \"_localeData\", {});\n    __publicField(this, \"_messages\", {});\n    __publicField(this, \"_missing\");\n    __publicField(this, \"_messageCompiler\");\n    /**\n     * Alias for {@see I18n._}\n     */\n    __publicField(this, \"t\", this._.bind(this));\n    if (true) {\n      this.setMessagesCompiler(_lingui_message_utils_compileMessage__WEBPACK_IMPORTED_MODULE_1__.compileMessage);\n    }\n    if (params.missing != null)\n      this._missing = params.missing;\n    if (params.messages != null)\n      this.load(params.messages);\n    if (params.localeData != null)\n      this.loadLocaleData(params.localeData);\n    if (typeof params.locale === \"string\" || params.locales) {\n      this.activate(params.locale ?? defaultLocale, params.locales);\n    }\n  }\n  get locale() {\n    return this._locale;\n  }\n  get locales() {\n    return this._locales;\n  }\n  get messages() {\n    return this._messages[this._locale] ?? {};\n  }\n  /**\n   * @deprecated this has no effect. Please remove this from the code. Deprecated in v4\n   */\n  get localeData() {\n    return this._localeData[this._locale] ?? {};\n  }\n  _loadLocaleData(locale, localeData) {\n    const maybeLocaleData = this._localeData[locale];\n    if (!maybeLocaleData) {\n      this._localeData[locale] = localeData;\n    } else {\n      Object.assign(maybeLocaleData, localeData);\n    }\n  }\n  /**\n   * Registers a `MessageCompiler` to enable the use of uncompiled catalogs at runtime.\n   *\n   * In production builds, the `MessageCompiler` is typically excluded to reduce bundle size.\n   * By default, message catalogs should be precompiled during the build process. However,\n   * if you need to compile catalogs at runtime, you can use this method to set a message compiler.\n   *\n   * Example usage:\n   *\n   * ```ts\n   * import { compileMessage } from \"@lingui/message-utils/compileMessage\";\n   *\n   * i18n.setMessagesCompiler(compileMessage);\n   * ```\n   */\n  setMessagesCompiler(compiler) {\n    this._messageCompiler = compiler;\n    return this;\n  }\n  /**\n   * @deprecated Plurals automatically used from Intl.PluralRules you can safely remove this call. Deprecated in v4\n   */\n  loadLocaleData(localeOrAllData, localeData) {\n    if (typeof localeOrAllData === \"string\") {\n      this._loadLocaleData(localeOrAllData, localeData);\n    } else {\n      Object.keys(localeOrAllData).forEach(\n        (locale) => this._loadLocaleData(locale, localeOrAllData[locale])\n      );\n    }\n    this.emit(\"change\");\n  }\n  _load(locale, messages) {\n    const maybeMessages = this._messages[locale];\n    if (!maybeMessages) {\n      this._messages[locale] = messages;\n    } else {\n      Object.assign(maybeMessages, messages);\n    }\n  }\n  load(localeOrMessages, messages) {\n    if (typeof localeOrMessages == \"string\" && typeof messages === \"object\") {\n      this._load(localeOrMessages, messages);\n    } else {\n      Object.entries(localeOrMessages).forEach(\n        ([locale, messages2]) => this._load(locale, messages2)\n      );\n    }\n    this.emit(\"change\");\n  }\n  /**\n   * @param options {@link LoadAndActivateOptions}\n   */\n  loadAndActivate({ locale, locales, messages }) {\n    this._locale = locale;\n    this._locales = locales || void 0;\n    this._messages[this._locale] = messages;\n    this.emit(\"change\");\n  }\n  activate(locale, locales) {\n    if (true) {\n      if (!this._messages[locale]) {\n        console.warn(`Messages for locale \"${locale}\" not loaded.`);\n      }\n    }\n    this._locale = locale;\n    this._locales = locales;\n    this.emit(\"change\");\n  }\n  _(id, values, options) {\n    if (!this.locale) {\n      throw new Error(\n        \"Lingui: Attempted to call a translation function without setting a locale.\\nMake sure to call `i18n.activate(locale)` before using Lingui functions.\\nThis issue may also occur due to a race condition in your initialization logic.\"\n      );\n    }\n    let message = options?.message;\n    if (!id) {\n      id = \"\";\n    }\n    if (!isString(id)) {\n      values = id.values || values;\n      message = id.message;\n      id = id.id;\n    }\n    const messageForId = this.messages[id];\n    const messageMissing = messageForId === void 0;\n    const missing = this._missing;\n    if (missing && messageMissing) {\n      return isFunction(missing) ? missing(this._locale, id) : missing;\n    }\n    if (messageMissing) {\n      this.emit(\"missing\", { id, locale: this._locale });\n    }\n    let translation = messageForId || message || id;\n    if (isString(translation)) {\n      if (this._messageCompiler) {\n        translation = this._messageCompiler(translation);\n      } else {\n        console.warn(`Uncompiled message detected! Message:\n\n> ${translation}\n\nThat means you use raw catalog or your catalog doesn't have a translation for the message and fallback was used.\nICU features such as interpolation and plurals will not work properly for that message. \n\nPlease compile your catalog first. \n`);\n      }\n    }\n    if (isString(translation) && UNICODE_REGEX.test(translation))\n      return JSON.parse(`\"${translation}\"`);\n    if (isString(translation))\n      return translation;\n    return interpolate(\n      translation,\n      this._locale,\n      this._locales\n    )(values, options?.formats);\n  }\n  date(value, format) {\n    return date(this._locales || this._locale, value, format);\n  }\n  number(value, format) {\n    return number(this._locales || this._locale, value, format);\n  }\n}\nfunction setupI18n(params = {}) {\n  return new I18n(params);\n}\n\nconst i18n = setupI18n();\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@lingui/core/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@lingui/message-utils/dist/compileMessage.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@lingui/message-utils/dist/compileMessage.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compileMessage: () => (/* binding */ compileMessage)\n/* harmony export */ });\n/* harmony import */ var _messageformat_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @messageformat/parser */ \"(ssr)/./node_modules/@messageformat/parser/lib/parser.js\");\n\n\n/**\n * Parent class for errors.\n *\n * @remarks\n * Errors with `type: \"warning\"` do not necessarily indicate that the parser\n * encountered an error. In addition to a human-friendly `message`, may also\n * includes the `token` at which the error was encountered.\n *\n * @public\n */\nclass DateFormatError extends Error {\n    /** @internal */\n    constructor(msg, token, type) {\n        super(msg);\n        this.token = token;\n        this.type = type || 'error';\n    }\n}\nconst alpha = (width) => width < 4 ? 'short' : width === 4 ? 'long' : 'narrow';\nconst numeric = (width) => (width % 2 === 0 ? '2-digit' : 'numeric');\nfunction yearOptions(token, onError) {\n    switch (token.char) {\n        case 'y':\n            return { year: numeric(token.width) };\n        case 'r':\n            return { calendar: 'gregory', year: 'numeric' };\n        case 'u':\n        case 'U':\n        case 'Y':\n        default:\n            onError(`${token.desc} is not supported; falling back to year:numeric`, DateFormatError.WARNING);\n            return { year: 'numeric' };\n    }\n}\nfunction monthStyle(token, onError) {\n    switch (token.width) {\n        case 1:\n            return 'numeric';\n        case 2:\n            return '2-digit';\n        case 3:\n            return 'short';\n        case 4:\n            return 'long';\n        case 5:\n            return 'narrow';\n        default:\n            onError(`${token.desc} is not supported with width ${token.width}`);\n            return undefined;\n    }\n}\nfunction dayStyle(token, onError) {\n    const { char, desc, width } = token;\n    if (char === 'd') {\n        return numeric(width);\n    }\n    else {\n        onError(`${desc} is not supported`);\n        return undefined;\n    }\n}\nfunction weekdayStyle(token, onError) {\n    const { char, desc, width } = token;\n    if ((char === 'c' || char === 'e') && width < 3) {\n        // ignoring stand-alone-ness\n        const msg = `Numeric value is not supported for ${desc}; falling back to weekday:short`;\n        onError(msg, DateFormatError.WARNING);\n    }\n    // merging narrow styles\n    return alpha(width);\n}\nfunction hourOptions(token) {\n    const hour = numeric(token.width);\n    let hourCycle;\n    switch (token.char) {\n        case 'h':\n            hourCycle = 'h12';\n            break;\n        case 'H':\n            hourCycle = 'h23';\n            break;\n        case 'k':\n            hourCycle = 'h24';\n            break;\n        case 'K':\n            hourCycle = 'h11';\n            break;\n    }\n    return hourCycle ? { hour, hourCycle } : { hour };\n}\nfunction timeZoneNameStyle(token, onError) {\n    // so much fallback behaviour here\n    const { char, desc, width } = token;\n    switch (char) {\n        case 'v':\n        case 'z':\n            return width === 4 ? 'long' : 'short';\n        case 'V':\n            if (width === 4)\n                return 'long';\n            onError(`${desc} is not supported with width ${width}`);\n            return undefined;\n        case 'X':\n            onError(`${desc} is not supported`);\n            return undefined;\n    }\n    return 'short';\n}\nfunction compileOptions(token, onError) {\n    switch (token.field) {\n        case 'era':\n            return { era: alpha(token.width) };\n        case 'year':\n            return yearOptions(token, onError);\n        case 'month':\n            return { month: monthStyle(token, onError) };\n        case 'day':\n            return { day: dayStyle(token, onError) };\n        case 'weekday':\n            return { weekday: weekdayStyle(token, onError) };\n        case 'period':\n            return undefined;\n        case 'hour':\n            return hourOptions(token);\n        case 'min':\n            return { minute: numeric(token.width) };\n        case 'sec':\n            return { second: numeric(token.width) };\n        case 'tz':\n            return { timeZoneName: timeZoneNameStyle(token, onError) };\n        case 'quarter':\n        case 'week':\n        case 'sec-frac':\n        case 'ms':\n            onError(`${token.desc} is not supported`);\n    }\n    return undefined;\n}\nfunction getDateFormatOptions(tokens, timeZone, onError = error => {\n    throw error;\n}) {\n    const options = {\n        timeZone\n    };\n    const fields = [];\n    for (const token of tokens) {\n        const { error, field, str } = token;\n        if (error) {\n            const dte = new DateFormatError(error.message, token);\n            dte.stack = error.stack;\n            onError(dte);\n        }\n        if (str) {\n            const msg = `Ignoring string part: ${str}`;\n            onError(new DateFormatError(msg, token, DateFormatError.WARNING));\n        }\n        if (field) {\n            if (fields.indexOf(field) === -1)\n                fields.push(field);\n            else\n                onError(new DateFormatError(`Duplicate ${field} token`, token));\n        }\n        const opt = compileOptions(token, (msg, isWarning) => onError(new DateFormatError(msg, token, isWarning)));\n        if (opt)\n            Object.assign(options, opt);\n    }\n    return options;\n}\n\nconst fields = {\n    G: { field: 'era', desc: 'Era' },\n    y: { field: 'year', desc: 'Year' },\n    Y: { field: 'year', desc: 'Year of \"Week of Year\"' },\n    u: { field: 'year', desc: 'Extended year' },\n    U: { field: 'year', desc: 'Cyclic year name' },\n    r: { field: 'year', desc: 'Related Gregorian year' },\n    Q: { field: 'quarter', desc: 'Quarter' },\n    q: { field: 'quarter', desc: 'Stand-alone quarter' },\n    M: { field: 'month', desc: 'Month in year' },\n    L: { field: 'month', desc: 'Stand-alone month in year' },\n    w: { field: 'week', desc: 'Week of year' },\n    W: { field: 'week', desc: 'Week of month' },\n    d: { field: 'day', desc: 'Day in month' },\n    D: { field: 'day', desc: 'Day of year' },\n    F: { field: 'day', desc: 'Day of week in month' },\n    g: { field: 'day', desc: 'Modified julian day' },\n    E: { field: 'weekday', desc: 'Day of week' },\n    e: { field: 'weekday', desc: 'Local day of week' },\n    c: { field: 'weekday', desc: 'Stand-alone local day of week' },\n    a: { field: 'period', desc: 'AM/PM marker' },\n    b: { field: 'period', desc: 'AM/PM/noon/midnight marker' },\n    B: { field: 'period', desc: 'Flexible day period' },\n    h: { field: 'hour', desc: 'Hour in AM/PM (1~12)' },\n    H: { field: 'hour', desc: 'Hour in day (0~23)' },\n    k: { field: 'hour', desc: 'Hour in day (1~24)' },\n    K: { field: 'hour', desc: 'Hour in AM/PM (0~11)' },\n    j: { field: 'hour', desc: 'Hour in preferred cycle' },\n    J: { field: 'hour', desc: 'Hour in preferred cycle without marker' },\n    C: { field: 'hour', desc: 'Hour in preferred cycle with flexible marker' },\n    m: { field: 'min', desc: 'Minute in hour' },\n    s: { field: 'sec', desc: 'Second in minute' },\n    S: { field: 'sec-frac', desc: 'Fractional second' },\n    A: { field: 'ms', desc: 'Milliseconds in day' },\n    z: { field: 'tz', desc: 'Time Zone: specific non-location' },\n    Z: { field: 'tz', desc: 'Time Zone' },\n    O: { field: 'tz', desc: 'Time Zone: localized' },\n    v: { field: 'tz', desc: 'Time Zone: generic non-location' },\n    V: { field: 'tz', desc: 'Time Zone: ID' },\n    X: { field: 'tz', desc: 'Time Zone: ISO8601 with Z' },\n    x: { field: 'tz', desc: 'Time Zone: ISO8601' }\n};\nconst isLetter = (char) => (char >= 'A' && char <= 'Z') || (char >= 'a' && char <= 'z');\nfunction readFieldToken(src, pos) {\n    const char = src[pos];\n    let width = 1;\n    while (src[++pos] === char)\n        ++width;\n    const field = fields[char];\n    if (!field) {\n        const msg = `The letter ${char} is not a valid field identifier`;\n        return { char, error: new Error(msg), width };\n    }\n    return { char, field: field.field, desc: field.desc, width };\n}\nfunction readQuotedToken(src, pos) {\n    let str = src[++pos];\n    let width = 2;\n    if (str === \"'\")\n        return { char: \"'\", str, width };\n    while (true) {\n        const next = src[++pos];\n        ++width;\n        if (next === undefined) {\n            const msg = `Unterminated quoted literal in pattern: ${str || src}`;\n            return { char: \"'\", error: new Error(msg), str, width };\n        }\n        else if (next === \"'\") {\n            if (src[++pos] !== \"'\")\n                return { char: \"'\", str, width };\n            else\n                ++width;\n        }\n        str += next;\n    }\n}\nfunction readToken(src, pos) {\n    const char = src[pos];\n    if (!char)\n        return null;\n    if (isLetter(char))\n        return readFieldToken(src, pos);\n    if (char === \"'\")\n        return readQuotedToken(src, pos);\n    let str = char;\n    let width = 1;\n    while (true) {\n        const next = src[++pos];\n        if (!next || isLetter(next) || next === \"'\")\n            return { char, str, width };\n        str += next;\n        width += 1;\n    }\n}\n/**\n * Parse an {@link http://userguide.icu-project.org/formatparse/datetime | ICU\n * DateFormat skeleton} string into a {@link DateToken} array.\n *\n * @remarks\n * Errors will not be thrown, but if encountered are included as the relevant\n * token's `error` value.\n *\n * @public\n * @param src - The skeleton string\n *\n * @example\n * ```js\n * import { parseDateTokens } from '@messageformat/date-skeleton'\n *\n * parseDateTokens('GrMMMdd', console.error)\n * // [\n * //   { char: 'G', field: 'era', desc: 'Era', width: 1 },\n * //   { char: 'r', field: 'year', desc: 'Related Gregorian year', width: 1 },\n * //   { char: 'M', field: 'month', desc: 'Month in year', width: 3 },\n * //   { char: 'd', field: 'day', desc: 'Day in month', width: 2 }\n * // ]\n * ```\n */\nfunction parseDateTokens(src) {\n    const tokens = [];\n    let pos = 0;\n    while (true) {\n        const token = readToken(src, pos);\n        if (!token)\n            return tokens;\n        tokens.push(token);\n        pos += token.width;\n    }\n}\n\nfunction processTokens(tokens, mapText) {\n  if (!tokens.filter((token) => token.type !== \"content\").length) {\n    return tokens.map((token) => mapText(token.value));\n  }\n  return tokens.map((token) => {\n    if (token.type === \"content\") {\n      return mapText(token.value);\n    } else if (token.type === \"octothorpe\") {\n      return \"#\";\n    } else if (token.type === \"argument\") {\n      return [token.arg];\n    } else if (token.type === \"function\") {\n      const _param = token?.param?.[0];\n      if (token.key === \"date\" && _param) {\n        const opts = compileDateExpression(_param.value.trim(), (e) => {\n          throw new Error(`Unable to compile date expression: ${e.message}`);\n        });\n        return [token.arg, token.key, opts];\n      }\n      if (_param) {\n        return [token.arg, token.key, _param.value.trim()];\n      } else {\n        return [token.arg, token.key];\n      }\n    }\n    const offset = token.pluralOffset;\n    const formatProps = {};\n    token.cases.forEach(({ key, tokens: tokens2 }) => {\n      const prop = key[0] === \"=\" ? key.slice(1) : key;\n      formatProps[prop] = processTokens(tokens2, mapText);\n    });\n    return [\n      token.arg,\n      token.type,\n      {\n        offset,\n        ...formatProps\n      }\n    ];\n  });\n}\nfunction compileDateExpression(format, onError) {\n  if (/^::/.test(format)) {\n    const tokens = parseDateTokens(format.substring(2));\n    return getDateFormatOptions(tokens, void 0, onError);\n  }\n  return format;\n}\nfunction compileMessage(message, mapText = (v) => v) {\n  try {\n    return processTokens((0,_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.parse)(message), mapText);\n  } catch (e) {\n    console.error(`${e.message} \n\nMessage: ${message}`);\n    return [message];\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@lingui/message-utils/dist/compileMessage.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@lingui/react/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@lingui/react/dist/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   I18nProvider: () => (/* binding */ I18nProvider),\n/* harmony export */   LinguiContext: () => (/* binding */ LinguiContext),\n/* harmony export */   Trans: () => (/* binding */ Trans),\n/* harmony export */   useLingui: () => (/* binding */ useLingui)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _shared_react_31c3b5fa_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shared/react.31c3b5fa.mjs */ \"(ssr)/./node_modules/@lingui/react/dist/shared/react.31c3b5fa.mjs\");\n/* __next_internal_client_entry_do_not_use__ I18nProvider,LinguiContext,Trans,useLingui auto */ \n\nconst LinguiContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useLinguiInternal = (devErrorMessage)=>{\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(LinguiContext);\n    if (true) {\n        if (context == null) {\n            throw new Error(devErrorMessage ?? \"useLingui hook was used without I18nProvider.\");\n        }\n    }\n    return context;\n};\nfunction useLingui() {\n    return useLinguiInternal();\n}\nconst I18nProvider = ({ i18n, defaultComponent, children })=>{\n    const latestKnownLocale = react__WEBPACK_IMPORTED_MODULE_0__.useRef(i18n.locale);\n    const makeContext = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"I18nProvider.useCallback[makeContext]\": ()=>({\n                i18n,\n                defaultComponent,\n                _: i18n.t.bind(i18n)\n            })\n    }[\"I18nProvider.useCallback[makeContext]\"], [\n        i18n,\n        defaultComponent\n    ]);\n    const [context, setContext] = react__WEBPACK_IMPORTED_MODULE_0__.useState(makeContext());\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"I18nProvider.useEffect\": ()=>{\n            const updateContext = {\n                \"I18nProvider.useEffect.updateContext\": ()=>{\n                    latestKnownLocale.current = i18n.locale;\n                    setContext(makeContext());\n                }\n            }[\"I18nProvider.useEffect.updateContext\"];\n            const unsubscribe = i18n.on(\"change\", updateContext);\n            if (latestKnownLocale.current !== i18n.locale) {\n                updateContext();\n            }\n            return unsubscribe;\n        }\n    }[\"I18nProvider.useEffect\"], [\n        i18n,\n        makeContext\n    ]);\n    if (!latestKnownLocale.current) {\n         true && console.log(\"I18nProvider rendered `null`. A call to `i18n.activate` needs to happen in order for translations to be activated and for the I18nProvider to render.This is not an error but an informational message logged only in development.\");\n        return null;\n    }\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LinguiContext.Provider, {\n        value: context\n    }, children);\n};\nfunction Trans(props) {\n    let errMessage = void 0;\n    if (true) {\n        errMessage = `Trans component was rendered without I18nProvider.\nAttempted to render message: ${props.message} id: ${props.id}. Make sure this component is rendered inside a I18nProvider.`;\n    }\n    const lingui = useLinguiInternal(errMessage);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_shared_react_31c3b5fa_mjs__WEBPACK_IMPORTED_MODULE_1__.T, {\n        ...props,\n        lingui\n    });\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxpbmd1aS9yZWFjdC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Z0dBQzBCO0FBQ3dDO0FBRWxFLE1BQU1HLDhCQUFnQkgsZ0RBQW1CLENBQUM7QUFDMUMsTUFBTUssb0JBQW9CLENBQUNDO0lBQ3pCLE1BQU1DLFVBQVVQLDZDQUFnQixDQUFDRztJQUNqQyxJQUFJTSxJQUFxQyxFQUFFO1FBQ3pDLElBQUlGLFdBQVcsTUFBTTtZQUNuQixNQUFNLElBQUlHLE1BQ1JKLG1CQUFtQjtRQUV2QjtJQUNGO0lBQ0EsT0FBT0M7QUFDVDtBQUNBLFNBQVNJO0lBQ1AsT0FBT047QUFDVDtBQUNBLE1BQU1PLGVBQWUsQ0FBQyxFQUNwQkMsSUFBSSxFQUNKQyxnQkFBZ0IsRUFDaEJDLFFBQVEsRUFDVDtJQUNDLE1BQU1DLG9CQUFvQmhCLHlDQUFZLENBQUNhLEtBQUtLLE1BQU07SUFDbEQsTUFBTUMsY0FBY25CLDhDQUFpQjtpREFDbkMsSUFBTztnQkFDTGE7Z0JBQ0FDO2dCQUNBTyxHQUFHUixLQUFLUyxDQUFDLENBQUNDLElBQUksQ0FBQ1Y7WUFDakI7Z0RBQ0E7UUFBQ0E7UUFBTUM7S0FBaUI7SUFFMUIsTUFBTSxDQUFDUCxTQUFTaUIsV0FBVyxHQUFHeEIsMkNBQWMsQ0FBQ21CO0lBQzdDbkIsNENBQWU7a0NBQUM7WUFDZCxNQUFNMkI7d0RBQWdCO29CQUNwQlgsa0JBQWtCWSxPQUFPLEdBQUdmLEtBQUtLLE1BQU07b0JBQ3ZDTSxXQUFXTDtnQkFDYjs7WUFDQSxNQUFNVSxjQUFjaEIsS0FBS2lCLEVBQUUsQ0FBQyxVQUFVSDtZQUN0QyxJQUFJWCxrQkFBa0JZLE9BQU8sS0FBS2YsS0FBS0ssTUFBTSxFQUFFO2dCQUM3Q1M7WUFDRjtZQUNBLE9BQU9FO1FBQ1Q7aUNBQUc7UUFBQ2hCO1FBQU1NO0tBQVk7SUFDdEIsSUFBSSxDQUFDSCxrQkFBa0JZLE9BQU8sRUFBRTthQUNRLElBQUlHLFFBQVFDLEdBQUcsQ0FDbkQ7UUFFRixPQUFPO0lBQ1Q7SUFDQSxPQUFPLGFBQWEsaUJBQUdoQyxnREFBbUIsQ0FBQ0csY0FBYytCLFFBQVEsRUFBRTtRQUFFQyxPQUFPNUI7SUFBUSxHQUFHUTtBQUN6RjtBQUVBLFNBQVNxQixNQUFNQyxLQUFLO0lBQ2xCLElBQUlDLGFBQWEsS0FBSztJQUN0QixJQUFJN0IsSUFBcUMsRUFBRTtRQUN6QzZCLGFBQWEsQ0FBQzs2QkFDVyxFQUFFRCxNQUFNRSxPQUFPLENBQUMsS0FBSyxFQUFFRixNQUFNRyxFQUFFLENBQUMsNkRBQTZELENBQUM7SUFDekg7SUFDQSxNQUFNQyxTQUFTcEMsa0JBQWtCaUM7SUFDakMscUJBQU90QyxnREFBbUIsQ0FBQ0UseURBQWNBLEVBQUU7UUFBRSxHQUFHbUMsS0FBSztRQUFFSTtJQUFPO0FBQ2hFO0FBRXlEIiwic291cmNlcyI6WyJQOlxcR2FsZW9uIHByb2plY3RzXFxnYWxlb24tY29tbXVuaXR5LWhvc3BpdGFsLW1hcFxcbWFpblxcbm9kZV9tb2R1bGVzXFxAbGluZ3VpXFxyZWFjdFxcZGlzdFxcaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBUIGFzIFRyYW5zTm9Db250ZXh0IH0gZnJvbSAnLi9zaGFyZWQvcmVhY3QuMzFjM2I1ZmEubWpzJztcblxuY29uc3QgTGluZ3VpQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQobnVsbCk7XG5jb25zdCB1c2VMaW5ndWlJbnRlcm5hbCA9IChkZXZFcnJvck1lc3NhZ2UpID0+IHtcbiAgY29uc3QgY29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQoTGluZ3VpQ29udGV4dCk7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBpZiAoY29udGV4dCA9PSBudWxsKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIGRldkVycm9yTWVzc2FnZSA/PyBcInVzZUxpbmd1aSBob29rIHdhcyB1c2VkIHdpdGhvdXQgSTE4blByb3ZpZGVyLlwiXG4gICAgICApO1xuICAgIH1cbiAgfVxuICByZXR1cm4gY29udGV4dDtcbn07XG5mdW5jdGlvbiB1c2VMaW5ndWkoKSB7XG4gIHJldHVybiB1c2VMaW5ndWlJbnRlcm5hbCgpO1xufVxuY29uc3QgSTE4blByb3ZpZGVyID0gKHtcbiAgaTE4bixcbiAgZGVmYXVsdENvbXBvbmVudCxcbiAgY2hpbGRyZW5cbn0pID0+IHtcbiAgY29uc3QgbGF0ZXN0S25vd25Mb2NhbGUgPSBSZWFjdC51c2VSZWYoaTE4bi5sb2NhbGUpO1xuICBjb25zdCBtYWtlQ29udGV4dCA9IFJlYWN0LnVzZUNhbGxiYWNrKFxuICAgICgpID0+ICh7XG4gICAgICBpMThuLFxuICAgICAgZGVmYXVsdENvbXBvbmVudCxcbiAgICAgIF86IGkxOG4udC5iaW5kKGkxOG4pXG4gICAgfSksXG4gICAgW2kxOG4sIGRlZmF1bHRDb21wb25lbnRdXG4gICk7XG4gIGNvbnN0IFtjb250ZXh0LCBzZXRDb250ZXh0XSA9IFJlYWN0LnVzZVN0YXRlKG1ha2VDb250ZXh0KCkpO1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHVwZGF0ZUNvbnRleHQgPSAoKSA9PiB7XG4gICAgICBsYXRlc3RLbm93bkxvY2FsZS5jdXJyZW50ID0gaTE4bi5sb2NhbGU7XG4gICAgICBzZXRDb250ZXh0KG1ha2VDb250ZXh0KCkpO1xuICAgIH07XG4gICAgY29uc3QgdW5zdWJzY3JpYmUgPSBpMThuLm9uKFwiY2hhbmdlXCIsIHVwZGF0ZUNvbnRleHQpO1xuICAgIGlmIChsYXRlc3RLbm93bkxvY2FsZS5jdXJyZW50ICE9PSBpMThuLmxvY2FsZSkge1xuICAgICAgdXBkYXRlQ29udGV4dCgpO1xuICAgIH1cbiAgICByZXR1cm4gdW5zdWJzY3JpYmU7XG4gIH0sIFtpMThuLCBtYWtlQ29udGV4dF0pO1xuICBpZiAoIWxhdGVzdEtub3duTG9jYWxlLmN1cnJlbnQpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJkZXZlbG9wbWVudFwiICYmIGNvbnNvbGUubG9nKFxuICAgICAgXCJJMThuUHJvdmlkZXIgcmVuZGVyZWQgYG51bGxgLiBBIGNhbGwgdG8gYGkxOG4uYWN0aXZhdGVgIG5lZWRzIHRvIGhhcHBlbiBpbiBvcmRlciBmb3IgdHJhbnNsYXRpb25zIHRvIGJlIGFjdGl2YXRlZCBhbmQgZm9yIHRoZSBJMThuUHJvdmlkZXIgdG8gcmVuZGVyLlRoaXMgaXMgbm90IGFuIGVycm9yIGJ1dCBhbiBpbmZvcm1hdGlvbmFsIG1lc3NhZ2UgbG9nZ2VkIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXCJcbiAgICApO1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChMaW5ndWlDb250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlOiBjb250ZXh0IH0sIGNoaWxkcmVuKTtcbn07XG5cbmZ1bmN0aW9uIFRyYW5zKHByb3BzKSB7XG4gIGxldCBlcnJNZXNzYWdlID0gdm9pZCAwO1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgZXJyTWVzc2FnZSA9IGBUcmFucyBjb21wb25lbnQgd2FzIHJlbmRlcmVkIHdpdGhvdXQgSTE4blByb3ZpZGVyLlxuQXR0ZW1wdGVkIHRvIHJlbmRlciBtZXNzYWdlOiAke3Byb3BzLm1lc3NhZ2V9IGlkOiAke3Byb3BzLmlkfS4gTWFrZSBzdXJlIHRoaXMgY29tcG9uZW50IGlzIHJlbmRlcmVkIGluc2lkZSBhIEkxOG5Qcm92aWRlci5gO1xuICB9XG4gIGNvbnN0IGxpbmd1aSA9IHVzZUxpbmd1aUludGVybmFsKGVyck1lc3NhZ2UpO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChUcmFuc05vQ29udGV4dCwgeyAuLi5wcm9wcywgbGluZ3VpIH0pO1xufVxuXG5leHBvcnQgeyBJMThuUHJvdmlkZXIsIExpbmd1aUNvbnRleHQsIFRyYW5zLCB1c2VMaW5ndWkgfTtcbiJdLCJuYW1lcyI6WyJSZWFjdCIsIlQiLCJUcmFuc05vQ29udGV4dCIsIkxpbmd1aUNvbnRleHQiLCJjcmVhdGVDb250ZXh0IiwidXNlTGluZ3VpSW50ZXJuYWwiLCJkZXZFcnJvck1lc3NhZ2UiLCJjb250ZXh0IiwidXNlQ29udGV4dCIsInByb2Nlc3MiLCJFcnJvciIsInVzZUxpbmd1aSIsIkkxOG5Qcm92aWRlciIsImkxOG4iLCJkZWZhdWx0Q29tcG9uZW50IiwiY2hpbGRyZW4iLCJsYXRlc3RLbm93bkxvY2FsZSIsInVzZVJlZiIsImxvY2FsZSIsIm1ha2VDb250ZXh0IiwidXNlQ2FsbGJhY2siLCJfIiwidCIsImJpbmQiLCJzZXRDb250ZXh0IiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ1cGRhdGVDb250ZXh0IiwiY3VycmVudCIsInVuc3Vic2NyaWJlIiwib24iLCJjb25zb2xlIiwibG9nIiwiY3JlYXRlRWxlbWVudCIsIlByb3ZpZGVyIiwidmFsdWUiLCJUcmFucyIsInByb3BzIiwiZXJyTWVzc2FnZSIsIm1lc3NhZ2UiLCJpZCIsImxpbmd1aSJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@lingui/react/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@lingui/react/dist/shared/react.31c3b5fa.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@lingui/react/dist/shared/react.31c3b5fa.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   T: () => (/* binding */ TransNoContext)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n\n\nconst tagRe = /<([a-zA-Z0-9]+)>([\\s\\S]*?)<\\/\\1>|<([a-zA-Z0-9]+)\\/>/;\nconst voidElementTags = {\n  area: true,\n  base: true,\n  br: true,\n  col: true,\n  embed: true,\n  hr: true,\n  img: true,\n  input: true,\n  keygen: true,\n  link: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true,\n  menuitem: true\n};\nfunction formatElements(value, elements = {}) {\n  const uniqueId = makeCounter(0, \"$lingui$\");\n  const parts = value.split(tagRe);\n  if (parts.length === 1)\n    return value;\n  const tree = [];\n  const before = parts.shift();\n  if (before)\n    tree.push(before);\n  for (const [index, children, after] of getElements(parts)) {\n    let element = typeof index !== \"undefined\" ? elements[index] : void 0;\n    if (!element || voidElementTags[element.type] && children) {\n      if (!element) {\n        console.error(\n          `Can't use element at index '${index}' as it is not declared in the original translation`\n        );\n      } else {\n        console.error(\n          `${element.type} is a void element tag therefore it must have no children`\n        );\n      }\n      element = react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment);\n    }\n    if (Array.isArray(element)) {\n      element = react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {}, element);\n    }\n    tree.push(\n      react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(\n        element,\n        { key: uniqueId() },\n        // format children for pair tags\n        // unpaired tags might have children if it's a component passed as a variable\n        children ? formatElements(children, elements) : element.props.children\n      )\n    );\n    if (after)\n      tree.push(after);\n  }\n  return tree.length === 1 ? tree[0] : tree;\n}\nfunction getElements(parts) {\n  if (!parts.length)\n    return [];\n  const [paired, children, unpaired, after] = parts.slice(0, 4);\n  const triple = [paired || unpaired, children || \"\", after];\n  return [triple].concat(getElements(parts.slice(4, parts.length)));\n}\nconst makeCounter = (count = 0, prefix = \"\") => () => `${prefix}_${count++}`;\n\nfunction TransNoContext(props) {\n  const {\n    render,\n    component,\n    id,\n    message,\n    formats,\n    lingui: { i18n, defaultComponent }\n  } = props;\n  const values = { ...props.values };\n  const components = { ...props.components };\n  if (values) {\n    Object.keys(values).forEach((key) => {\n      const index = Object.keys(components).length;\n      if (typeof values[key] === \"string\" || typeof values[key] === \"number\") {\n        return;\n      }\n      components[index] = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, values[key]);\n      values[key] = `<${index}/>`;\n    });\n  }\n  const _translation = i18n && typeof i18n._ === \"function\" ? i18n._(id, values, { message, formats }) : id;\n  const translation = _translation ? formatElements(_translation, components) : null;\n  if (render === null || component === null) {\n    return translation;\n  }\n  const FallbackComponent = defaultComponent || RenderFragment;\n  const i18nProps = {\n    id,\n    message,\n    translation,\n    children: translation\n    // for type-compatibility with `component` prop\n  };\n  if (render && component) {\n    console.error(\n      \"You can't use both `component` and `render` prop at the same time. `component` is ignored.\"\n    );\n  } else if (render && typeof render !== \"function\") {\n    console.error(\n      `Invalid value supplied to prop \\`render\\`. It must be a function, provided ${render}`\n    );\n  } else if (component && typeof component !== \"function\") {\n    console.error(\n      `Invalid value supplied to prop \\`component\\`. It must be a React component, provided ${component}`\n    );\n    return react__WEBPACK_IMPORTED_MODULE_0__.createElement(FallbackComponent, i18nProps, translation);\n  }\n  if (typeof render === \"function\") {\n    return render(i18nProps);\n  }\n  const Component = component || FallbackComponent;\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component, i18nProps, translation);\n}\nconst RenderFragment = ({ children }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxpbmd1aS9yZWFjdC9kaXN0L3NoYXJlZC9yZWFjdC4zMWMzYjVmYS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEI7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLE1BQU07QUFDL0M7QUFDQSxRQUFRO0FBQ1I7QUFDQSxhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBLGdCQUFnQixnREFBbUIsQ0FBQywyQ0FBYztBQUNsRDtBQUNBO0FBQ0EsZ0JBQWdCLGdEQUFtQixDQUFDLDJDQUFjLElBQUk7QUFDdEQ7QUFDQTtBQUNBLE1BQU0sK0NBQWtCO0FBQ3hCO0FBQ0EsVUFBVSxpQkFBaUI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCxPQUFPLEdBQUcsUUFBUTs7QUFFM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsSUFBSTtBQUNKLG1CQUFtQjtBQUNuQix1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLGdEQUFtQixDQUFDLDJDQUFjO0FBQzVFLHdCQUF3QixNQUFNO0FBQzlCLEtBQUs7QUFDTDtBQUNBLG1GQUFtRixrQkFBa0I7QUFDckc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxvRkFBb0YsT0FBTztBQUMzRjtBQUNBLElBQUk7QUFDSjtBQUNBLDhGQUE4RixVQUFVO0FBQ3hHO0FBQ0EsV0FBVyxnREFBbUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsZ0RBQW1CO0FBQzVCO0FBQ0EsMEJBQTBCLFVBQVU7QUFDcEMseUJBQXlCLGdEQUFtQixDQUFDLDJDQUFjO0FBQzNEOztBQUUrQiIsInNvdXJjZXMiOlsiUDpcXEdhbGVvbiBwcm9qZWN0c1xcZ2FsZW9uLWNvbW11bml0eS1ob3NwaXRhbC1tYXBcXG1haW5cXG5vZGVfbW9kdWxlc1xcQGxpbmd1aVxccmVhY3RcXGRpc3RcXHNoYXJlZFxccmVhY3QuMzFjM2I1ZmEubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IHRhZ1JlID0gLzwoW2EtekEtWjAtOV0rKT4oW1xcc1xcU10qPyk8XFwvXFwxPnw8KFthLXpBLVowLTldKylcXC8+LztcbmNvbnN0IHZvaWRFbGVtZW50VGFncyA9IHtcbiAgYXJlYTogdHJ1ZSxcbiAgYmFzZTogdHJ1ZSxcbiAgYnI6IHRydWUsXG4gIGNvbDogdHJ1ZSxcbiAgZW1iZWQ6IHRydWUsXG4gIGhyOiB0cnVlLFxuICBpbWc6IHRydWUsXG4gIGlucHV0OiB0cnVlLFxuICBrZXlnZW46IHRydWUsXG4gIGxpbms6IHRydWUsXG4gIG1ldGE6IHRydWUsXG4gIHBhcmFtOiB0cnVlLFxuICBzb3VyY2U6IHRydWUsXG4gIHRyYWNrOiB0cnVlLFxuICB3YnI6IHRydWUsXG4gIG1lbnVpdGVtOiB0cnVlXG59O1xuZnVuY3Rpb24gZm9ybWF0RWxlbWVudHModmFsdWUsIGVsZW1lbnRzID0ge30pIHtcbiAgY29uc3QgdW5pcXVlSWQgPSBtYWtlQ291bnRlcigwLCBcIiRsaW5ndWkkXCIpO1xuICBjb25zdCBwYXJ0cyA9IHZhbHVlLnNwbGl0KHRhZ1JlKTtcbiAgaWYgKHBhcnRzLmxlbmd0aCA9PT0gMSlcbiAgICByZXR1cm4gdmFsdWU7XG4gIGNvbnN0IHRyZWUgPSBbXTtcbiAgY29uc3QgYmVmb3JlID0gcGFydHMuc2hpZnQoKTtcbiAgaWYgKGJlZm9yZSlcbiAgICB0cmVlLnB1c2goYmVmb3JlKTtcbiAgZm9yIChjb25zdCBbaW5kZXgsIGNoaWxkcmVuLCBhZnRlcl0gb2YgZ2V0RWxlbWVudHMocGFydHMpKSB7XG4gICAgbGV0IGVsZW1lbnQgPSB0eXBlb2YgaW5kZXggIT09IFwidW5kZWZpbmVkXCIgPyBlbGVtZW50c1tpbmRleF0gOiB2b2lkIDA7XG4gICAgaWYgKCFlbGVtZW50IHx8IHZvaWRFbGVtZW50VGFnc1tlbGVtZW50LnR5cGVdICYmIGNoaWxkcmVuKSB7XG4gICAgICBpZiAoIWVsZW1lbnQpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgICBgQ2FuJ3QgdXNlIGVsZW1lbnQgYXQgaW5kZXggJyR7aW5kZXh9JyBhcyBpdCBpcyBub3QgZGVjbGFyZWQgaW4gdGhlIG9yaWdpbmFsIHRyYW5zbGF0aW9uYFxuICAgICAgICApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgICBgJHtlbGVtZW50LnR5cGV9IGlzIGEgdm9pZCBlbGVtZW50IHRhZyB0aGVyZWZvcmUgaXQgbXVzdCBoYXZlIG5vIGNoaWxkcmVuYFxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgZWxlbWVudCA9IFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQpO1xuICAgIH1cbiAgICBpZiAoQXJyYXkuaXNBcnJheShlbGVtZW50KSkge1xuICAgICAgZWxlbWVudCA9IFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIHt9LCBlbGVtZW50KTtcbiAgICB9XG4gICAgdHJlZS5wdXNoKFxuICAgICAgUmVhY3QuY2xvbmVFbGVtZW50KFxuICAgICAgICBlbGVtZW50LFxuICAgICAgICB7IGtleTogdW5pcXVlSWQoKSB9LFxuICAgICAgICAvLyBmb3JtYXQgY2hpbGRyZW4gZm9yIHBhaXIgdGFnc1xuICAgICAgICAvLyB1bnBhaXJlZCB0YWdzIG1pZ2h0IGhhdmUgY2hpbGRyZW4gaWYgaXQncyBhIGNvbXBvbmVudCBwYXNzZWQgYXMgYSB2YXJpYWJsZVxuICAgICAgICBjaGlsZHJlbiA/IGZvcm1hdEVsZW1lbnRzKGNoaWxkcmVuLCBlbGVtZW50cykgOiBlbGVtZW50LnByb3BzLmNoaWxkcmVuXG4gICAgICApXG4gICAgKTtcbiAgICBpZiAoYWZ0ZXIpXG4gICAgICB0cmVlLnB1c2goYWZ0ZXIpO1xuICB9XG4gIHJldHVybiB0cmVlLmxlbmd0aCA9PT0gMSA/IHRyZWVbMF0gOiB0cmVlO1xufVxuZnVuY3Rpb24gZ2V0RWxlbWVudHMocGFydHMpIHtcbiAgaWYgKCFwYXJ0cy5sZW5ndGgpXG4gICAgcmV0dXJuIFtdO1xuICBjb25zdCBbcGFpcmVkLCBjaGlsZHJlbiwgdW5wYWlyZWQsIGFmdGVyXSA9IHBhcnRzLnNsaWNlKDAsIDQpO1xuICBjb25zdCB0cmlwbGUgPSBbcGFpcmVkIHx8IHVucGFpcmVkLCBjaGlsZHJlbiB8fCBcIlwiLCBhZnRlcl07XG4gIHJldHVybiBbdHJpcGxlXS5jb25jYXQoZ2V0RWxlbWVudHMocGFydHMuc2xpY2UoNCwgcGFydHMubGVuZ3RoKSkpO1xufVxuY29uc3QgbWFrZUNvdW50ZXIgPSAoY291bnQgPSAwLCBwcmVmaXggPSBcIlwiKSA9PiAoKSA9PiBgJHtwcmVmaXh9XyR7Y291bnQrK31gO1xuXG5mdW5jdGlvbiBUcmFuc05vQ29udGV4dChwcm9wcykge1xuICBjb25zdCB7XG4gICAgcmVuZGVyLFxuICAgIGNvbXBvbmVudCxcbiAgICBpZCxcbiAgICBtZXNzYWdlLFxuICAgIGZvcm1hdHMsXG4gICAgbGluZ3VpOiB7IGkxOG4sIGRlZmF1bHRDb21wb25lbnQgfVxuICB9ID0gcHJvcHM7XG4gIGNvbnN0IHZhbHVlcyA9IHsgLi4ucHJvcHMudmFsdWVzIH07XG4gIGNvbnN0IGNvbXBvbmVudHMgPSB7IC4uLnByb3BzLmNvbXBvbmVudHMgfTtcbiAgaWYgKHZhbHVlcykge1xuICAgIE9iamVjdC5rZXlzKHZhbHVlcykuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICBjb25zdCBpbmRleCA9IE9iamVjdC5rZXlzKGNvbXBvbmVudHMpLmxlbmd0aDtcbiAgICAgIGlmICh0eXBlb2YgdmFsdWVzW2tleV0gPT09IFwic3RyaW5nXCIgfHwgdHlwZW9mIHZhbHVlc1trZXldID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGNvbXBvbmVudHNbaW5kZXhdID0gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIHZhbHVlc1trZXldKTtcbiAgICAgIHZhbHVlc1trZXldID0gYDwke2luZGV4fS8+YDtcbiAgICB9KTtcbiAgfVxuICBjb25zdCBfdHJhbnNsYXRpb24gPSBpMThuICYmIHR5cGVvZiBpMThuLl8gPT09IFwiZnVuY3Rpb25cIiA/IGkxOG4uXyhpZCwgdmFsdWVzLCB7IG1lc3NhZ2UsIGZvcm1hdHMgfSkgOiBpZDtcbiAgY29uc3QgdHJhbnNsYXRpb24gPSBfdHJhbnNsYXRpb24gPyBmb3JtYXRFbGVtZW50cyhfdHJhbnNsYXRpb24sIGNvbXBvbmVudHMpIDogbnVsbDtcbiAgaWYgKHJlbmRlciA9PT0gbnVsbCB8fCBjb21wb25lbnQgPT09IG51bGwpIHtcbiAgICByZXR1cm4gdHJhbnNsYXRpb247XG4gIH1cbiAgY29uc3QgRmFsbGJhY2tDb21wb25lbnQgPSBkZWZhdWx0Q29tcG9uZW50IHx8IFJlbmRlckZyYWdtZW50O1xuICBjb25zdCBpMThuUHJvcHMgPSB7XG4gICAgaWQsXG4gICAgbWVzc2FnZSxcbiAgICB0cmFuc2xhdGlvbixcbiAgICBjaGlsZHJlbjogdHJhbnNsYXRpb25cbiAgICAvLyBmb3IgdHlwZS1jb21wYXRpYmlsaXR5IHdpdGggYGNvbXBvbmVudGAgcHJvcFxuICB9O1xuICBpZiAocmVuZGVyICYmIGNvbXBvbmVudCkge1xuICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICBcIllvdSBjYW4ndCB1c2UgYm90aCBgY29tcG9uZW50YCBhbmQgYHJlbmRlcmAgcHJvcCBhdCB0aGUgc2FtZSB0aW1lLiBgY29tcG9uZW50YCBpcyBpZ25vcmVkLlwiXG4gICAgKTtcbiAgfSBlbHNlIGlmIChyZW5kZXIgJiYgdHlwZW9mIHJlbmRlciAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgY29uc29sZS5lcnJvcihcbiAgICAgIGBJbnZhbGlkIHZhbHVlIHN1cHBsaWVkIHRvIHByb3AgXFxgcmVuZGVyXFxgLiBJdCBtdXN0IGJlIGEgZnVuY3Rpb24sIHByb3ZpZGVkICR7cmVuZGVyfWBcbiAgICApO1xuICB9IGVsc2UgaWYgKGNvbXBvbmVudCAmJiB0eXBlb2YgY29tcG9uZW50ICE9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBjb25zb2xlLmVycm9yKFxuICAgICAgYEludmFsaWQgdmFsdWUgc3VwcGxpZWQgdG8gcHJvcCBcXGBjb21wb25lbnRcXGAuIEl0IG11c3QgYmUgYSBSZWFjdCBjb21wb25lbnQsIHByb3ZpZGVkICR7Y29tcG9uZW50fWBcbiAgICApO1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KEZhbGxiYWNrQ29tcG9uZW50LCBpMThuUHJvcHMsIHRyYW5zbGF0aW9uKTtcbiAgfVxuICBpZiAodHlwZW9mIHJlbmRlciA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgcmV0dXJuIHJlbmRlcihpMThuUHJvcHMpO1xuICB9XG4gIGNvbnN0IENvbXBvbmVudCA9IGNvbXBvbmVudCB8fCBGYWxsYmFja0NvbXBvbmVudDtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCBpMThuUHJvcHMsIHRyYW5zbGF0aW9uKTtcbn1cbmNvbnN0IFJlbmRlckZyYWdtZW50ID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIGNoaWxkcmVuKTtcbn07XG5cbmV4cG9ydCB7IFRyYW5zTm9Db250ZXh0IGFzIFQgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@lingui/react/dist/shared/react.31c3b5fa.mjs\n");

/***/ })

};
;