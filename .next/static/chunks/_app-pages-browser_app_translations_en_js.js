"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_app_translations_en_js"],{

/***/ "(app-pages-browser)/./app/translations/en.js":
/*!********************************!*\
  !*** ./app/translations/en.js ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   messages: () => (/* binding */ messages)\n/* harmony export */ });\n/*eslint-disable*/ // English translation file for the Galeon Hospitals Map application\n// Contains all strings translated to English\nconst messages = {\n    // General\n    'Galeon Logo': 'Galeon Logo',\n    GALEON: 'GALEON',\n    'HOSPITALS MAP': 'HOSPITALS MAP',\n    'A community-driven map of deployed hospitals, with support from the Galeon team. Data is not official and may evolve over time.': 'A community-driven map of deployed hospitals, with support from the Galeon team. Data is not official and may evolve over time.',\n    'Last updated': 'Last updated',\n    on: 'on',\n    Distribution: 'Distribution',\n    'Toggle deployed hospitals': 'Toggle deployed hospitals',\n    Deployed: 'Deployed',\n    Deployed_sidebar: 'Deployed',\n    'Toggle signed hospitals': 'Toggle signed hospitals',\n    Signed: 'Signed',\n    Signed_sidebar: 'Signed',\n    Language: 'Language',\n    'Select language': 'Select language',\n    Skip: 'Skip',\n    Export: 'Export',\n    'Export data': 'Export data',\n    'PDF export will be available soon': 'PDF export will be available soon',\n    'XLS export will be available soon': 'XLS export will be available soon',\n    'Choose export format': 'Choose export format',\n    'Export hospital data': 'Export hospital data',\n    'Export options': 'Export options',\n    // Footer\n    'Made with': 'Made with',\n    by: 'by',\n    'Galeon Community': 'Galeon Community',\n    // Social links\n    'Visit our website': 'Visit our website',\n    'Follow us on Twitter': 'Follow us on Twitter',\n    'Connect on LinkedIn': 'Connect on LinkedIn',\n    'Watch us on YouTube': 'Watch us on YouTube',\n    'Join us on Telegram': 'Join us on Telegram',\n    // Share menu\n    Share: 'Share',\n    Email: 'Email',\n    'Copy Link': 'Copy Link',\n    'Link copied to clipboard!': 'Link copied to clipboard!',\n    'Galeon Hospitals Map': 'Galeon Hospitals Map',\n    'Check out this map of Galeon hospitals!': 'Check out this map of Galeon hospitals!',\n    'Check out this interactive map of Galeon hospitals!': 'Check out this interactive map of Galeon hospitals!',\n    'Share with others': 'Share with others',\n    'QR Code': 'QR Code',\n    'Social Media': 'Social Media',\n    'Sharing failed. Please try again.': 'Sharing failed. Please try again.',\n    // Export functionality\n    'PDF export completed successfully!': 'PDF export completed successfully!',\n    'XLS export completed successfully!': 'XLS export completed successfully!',\n    'JSON export completed successfully!': 'JSON export completed successfully!',\n    'Failed to export PDF. Please try again.': 'Failed to export PDF. Please try again.',\n    'Failed to export XLS. Please try again.': 'Failed to export XLS. Please try again.',\n    'Failed to export JSON. Please try again.': 'Failed to export JSON. Please try again.',\n    'Total Hospitals': 'Total Hospitals',\n    'Hospital Name': 'Hospital Name',\n    Coordinates: 'Coordinates',\n    Page: 'Page',\n    of: 'of',\n    Hospitals: 'Hospitals',\n    hospital: 'hospital',\n    hospitals: 'hospitals',\n    'Export Information': 'Export Information',\n    'Deployed Hospitals': 'Deployed Hospitals',\n    'Signed Hospitals': 'Signed Hospitals',\n    'Status Distribution': 'Status Distribution',\n    Metadata: 'Metadata',\n    // Loading\n    'Loading application...': 'Loading application...',\n    // Hospital details\n    Address: 'Address',\n    Status: 'Status',\n    'Deployment Date': 'Deployment Date',\n    Website: 'Website',\n    'Visit Website': 'Visit Website',\n    'Get Directions': 'Get Directions',\n    'Get directions to': 'Get directions to',\n    'Choose navigation app': 'Choose navigation app',\n    'Select your preferred app to get directions to': 'Select your preferred app to get directions to',\n    'this hospital': 'this hospital',\n    // More/Settings Tab\n    'More': 'More',\n    'Settings & Controls': 'Settings & Controls',\n    'Filters': 'Filters',\n    'Map Filters': 'Map Filters',\n    'Search hospitals...': 'Search hospitals...',\n    'hospitals visible': 'hospitals visible',\n    'Overview': 'Overview',\n    'Advanced Statistics': 'Advanced Statistics',\n    'Filtered hospitals': 'Filtered hospitals',\n    'Search active': 'Search active',\n    'Yes': 'Yes',\n    'No': 'No',\n    'Version': 'Version',\n    'Updated': 'Updated',\n    'GitHub Repository': 'GitHub Repository',\n    'Visit Galeon': 'Visit Galeon',\n    'Follow Us': 'Follow Us',\n    // Headers simplifiés\n    'Hospitals List': 'Hospitals List',\n    'Deployment Timeline': 'Deployment Timeline',\n    'Settings & More': 'Settings & More',\n    'periods': 'periods',\n    // Copyright et version\n    'Copyright': '© 2025 Galeon Community',\n    'Universal web navigation': 'Universal web navigation',\n    'Native Apple application': 'Native Apple application',\n    'Community navigation': 'Community navigation',\n    'Your default browser will open the selected navigation app': 'Your default browser will open the selected navigation app',\n    Close: 'Close',\n    'Search Hospitals': 'Search Hospitals',\n    'Search by name or address...': 'Search by name or address...',\n    'Clear search': 'Clear search',\n    'Showing results for': 'Showing results for',\n    DPI_tooltip: 'Electronic Health Record'\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/translations/en.js\n"));

/***/ })

}]);